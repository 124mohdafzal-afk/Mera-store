<!-- SAVE THIS FILE AS index.html -->
<!DOCTYPE html>
<html lang="hi">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>рдореЗрд░рд╛ рдСрдирд▓рд╛рдЗрди рд╕реНрдЯреЛрд░ тАФ рдкреВрд░рд╛ рдкреИрдХреЗрдЬ</title>
  <style>
    :root{--brand:#f39c12;--dark:#2c3e50}
    *{box-sizing:border-box}
    body{margin:0;font-family:Arial,Helvetica,sans-serif;background:#f5f6f7;color:#222}
    header{background:var(--dark);color:#fff;padding:14px 20px;display:flex;justify-content:space-between;align-items:center}
    header h1{margin:0;font-size:20px}
    nav a{color:#fff;text-decoration:none;margin-left:12px;font-weight:600}
    .banner{background:url('https://picsum.photos/1200/450?random=11') center/cover no-repeat;color:#fff;text-align:center;padding:70px 16px}
    .banner h2{margin:0;font-size:36px}
    .btn{background:var(--brand);color:#fff;padding:8px 14px;border-radius:8px;border:0;cursor:pointer;font-weight:700}
    .container{max-width:1100px;margin:22px auto;padding:0 14px}
    .section h2{text-align:center;margin-bottom:14px}
    .products{display:grid;grid-template-columns:repeat(auto-fit,minmax(240px,1fr));gap:16px}
    .card{background:#fff;padding:12px;border-radius:10px;box-shadow:0 2px 8px rgba(0,0,0,0.06)}
    .card img{width:100%;border-radius:8px}
    .card h3{margin:10px 0 6px;font-size:18px}
    .card p{margin:0 0 8px;color:#555}
    .price{color:#e74c3c;font-weight:800;margin-bottom:8px}
    footer{background:var(--dark);color:#fff;text-align:center;padding:14px;margin-top:26px}
    /* Cart modal */
    #cartModal{display:none;position:fixed;inset:0;background:rgba(0,0,0,0.5);align-items:center;justify-content:center;padding:20px}
    #cartBox{background:#fff;width:100%;max-width:640px;border-radius:10px;padding:16px;max-height:90vh;overflow:auto}
    #cartItems p{display:flex;justify-content:space-between;align-items:center;margin:8px 0;padding:6px;border-radius:6px;background:#fafafa}
    .small{font-size:13px;color:#666}
    .flex{display:flex;gap:8px;align-items:center}
    .row{display:flex;justify-content:space-between;align-items:center;margin-top:10px}
    .input{padding:8px;border-radius:6px;border:1px solid #ddd;width:100%}
    .qr{display:block;margin:8px auto;max-width:220px}
    .muted{color:#777;font-size:13px}
    @media(max-width:520px){ .banner h2{font-size:26px} header h1{font-size:16px} }
  </style>
  <!-- Razorpay checkout lib (client-side) -->
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
</head>
<body>
  <header>
    <h1>ЁЯМ┐ рдореЗрд░рд╛ рд╕реНрдЯреЛрд░</h1>
    <nav>
      <a href="#home">рд╣реЛрдо</a>
      <a href="#products">рдкреНрд░реЛрдбрдХреНрдЯреНрд╕</a>
      <a href="#about">рд╣рдорд╛рд░реЗ рдмрд╛рд░реЗ рдореЗрдВ</a>
      <a href="#contact">рд╕рдВрдкрд░реНрдХ</a>
      <a class="btn" href="javascript:void(0)" onclick="openCart()">ЁЯЫТ Cart (<span id="cartCount">0</span>)</a>
    </nav>
  </header>

  <section class="banner" id="home">
    <h2>рд╕рд░реНрд╡рд╢реНрд░реЗрд╖реНрда рдкреНрд░реЛрдбрдХреНрдЯ тАФ рдЖрд╕рд╛рди рдкреЗрдореЗрдВрдЯ рд╡рд┐рдХрд▓реНрдк</h2>
    <p class="small">Razorpay (card/UPI) рдпрд╛ рд╕реАрдзреЗ UPI рдХреЗ рдорд╛рдзреНрдпрдо рд╕реЗ рдкреЗрдореЗрдВрдЯ рдХрд░реЗрдВ тАФ рджреЛрдиреЛрдВ рдкреЗрдЬ рдкрд░ рдореМрдЬреВрджред</p>
  </section>

  <div class="container">
    <section id="productsSection" class="section">
      <h2>рд╣рдорд╛рд░реЗ рдкреНрд░реЛрдбрдХреНрдЯреНрд╕</h2>
      <div class="products" id="productGrid">
        <!-- products injected by JS -->
      </div>
    </section>

    <section id="about" class="section">
      <h2>рд╣рдорд╛рд░реЗ рдмрд╛рд░реЗ рдореЗрдВ</h2>
      <p style="text-align:center;max-width:900px;margin:0 auto" class="muted">
        рд╣рдо рдЫреЛрдЯреЗ рд╡реНрдпрд╡рд╕рд╛рдпреЛрдВ рдХреЗ рд▓рд┐рдП рдЙрдЪреНрдЪ рдЧреБрдгрд╡рддреНрддрд╛ рд╡рд╛рд▓реЗ рдкреНрд░реЛрдбрдХреНрдЯреНрд╕ рдЙрдкрд▓рдмреНрдз рдХрд░рд╛рддреЗ рд╣реИрдВред рдпрд╣рд╛рдБ рджрд┐рдЦ рд░рд╣реЗ рд╕рднреА рдлреАрдЪрд░реНрд╕
        (рдХрд╛рд░реНрдЯ, UPI рд▓рд┐рдВрдХ/QR, Razorpay Checkout) рдбреЗрдореЛ рдХреЗ рд░реВрдк рдореЗрдВ рд╣реИрдВ тАФ рдЖрдк рдЕрдкрдиреА рдЬрд╛рдирдХрд╛рд░реА рдбрд╛рд▓ рдХрд░ live рдХрд░ рд╕рдХрддреЗ рд╣реИрдВред
      </p>
    </section>

    <section id="contact" class="section">
      <h2>рд╕рдВрдкрд░реНрдХ</h2>
      <p style="text-align:center" class="muted">ЁЯУЮ +91 9876543210 &nbsp; | &nbsp; тЬЙя╕П example@store.com &nbsp; | &nbsp; рдирдИ рджрд┐рд▓реНрд▓реА, рднрд╛рд░рдд</p>
    </section>
  </div>

  <footer>┬й 2025 рдореЗрд░рд╛ рд╕реНрдЯреЛрд░ тАФ рд╕рднреА рдЕрдзрд┐рдХрд╛рд░ рд╕реБрд░рдХреНрд╖рд┐рдд</footer>

  <!-- CART MODAL -->
  <div id="cartModal" onclick="if(event.target.id==='cartModal') closeCart()">
    <div id="cartBox" role="dialog" aria-modal="true">
      <h3>ЁЯЫТ рдЖрдкрдХрд╛ рдХрд╛рд░реНрдЯ</h3>
      <div id="cartItems"></div>

      <div class="row">
        <div><strong>рдХреБрд▓:</strong> тВ╣<span id="cartTotal">0</span></div>
        <div class="flex">
          <button class="btn" onclick="startRazorpay()">Checkout (Razorpay)</button>
          <button class="btn" style="background:#2f2f2f" onclick="showUPI()">Pay via UPI</button>
          <button class="btn" style="background:#888" onclick="closeCart()">Close</button>
        </div>
      </div>

      <hr style="margin:12px 0"/>

      <!-- UPI SECTION (hidden by default) -->
      <div id="upiSection" style="display:none">
        <h4>UPI рд╕реЗ рдкреЗрдореЗрдВрдЯ рдХрд░реЗрдВ</h4>
        <p class="small">рдиреАрдЪреЗ UPI рдХреЗ рджреЛ рд╡рд┐рдХрд▓реНрдк рд╣реИрдВ тАФ рдлреЛрди рд╕реЗ рд╕реАрдзреЗ Pay рдХрд░реЗрдВ (mobile) рдпрд╛ QR рд╕реНрдХреИрди рдХрд░реЗрдВред</p>

        <!-- UPI input: change upiId below to your merchant UPI id -->
        <div style="display:flex;gap:8px;margin:8px 0">
          <input id="upiIdInput" class="input" placeholder="рдЕрдкрдирд╛ UPI ID (рдЙda: merchant@bank)" value="yourupi@bank"/>
          <button class="btn" onclick="openUPI()">Open UPI App</button>
        </div>

        <p class="small">рдпрд╛ QR рд╕реНрдХреИрди рдХрд░ рдХреЗ рдкреЗ рдХрд░реЗрдВ:</p>
        <img id="upiQR" class="qr" alt="UPI QR" src="" style="display:none"/>

        <div style="margin-top:10px">
          <button class="btn" onclick="generateQR()">QR Generate</button>
          <button class="btn" style="background:#666" onclick="hideUPI()">Hide UPI</button>
        </div>

        <p class="muted" style="margin-top:10px">рдиреЛрдЯ: UPI рд╡рд╛рд▓рд╛ рддрд░реАрдХрд╛ рдмрд┐рдирд╛ рд╕рд░реНрд╡рд░ рдХреЗ рдХрд╛рдо рдХрд░рддрд╛ рд╣реИред рдкреЗрдореЗрдВрдЯ рдХрдиреНрдлрд░реНрдореЗрд╢рди рдореИрдиреНрдпреБрдЕрд▓ рд░рдЦреЗрдВ (рдпреВрдЬрд╝рд░ рдЖрдкрдХреЛ рдореИрд╕реЗрдЬ рдХрд░ рд╕рдХрддрд╛ рд╣реИ)ред</p>
      </div>

      <hr style="margin:12px 0"/>

      <!-- CUSTOMER DETAILS (optional) -->
      <div>
        <h4>Order Details (optional)</h4>
        <input id="custName" class="input" placeholder="рдирд╛рдо"/>
        <div style="height:8px"></div>
        <input id="custPhone" class="input" placeholder="рдлрд╝реЛрди рдирдВрдмрд░"/>
        <div style="height:8px"></div>
        <input id="custEmail" class="input" placeholder="рдИрдореЗрд▓"/>
      </div>

      <div style="height:8px"></div>
      <div style="text-align:right"><small class="muted">Tip: Razorpay рдХреЗ рд▓рд┐рдП server-order рдмрдирд╛рдирд╛ рд╕реБрд░рдХреНрд╖рд┐рдд рд╣реИред рдиреАрдЪреЗ рд╡рд┐рд╡рд░рдг рджреЗрдЦреЗрдВред</small></div>
    </div>
  </div>

<script>
/* ---------------------------
   PRODUCTS - рдЖрдк рдпрд╣рд╛рдБ products рдмрджрд▓ рд╕рдХрддреЗ рд╣реИрдВ
   each item: id, name, price (INR), description, img (optional)
   --------------------------- */
const PRODUCTS = [
  {id:1, name:'рдкреНрд░реЛрдбрдХреНрдЯ 1', price:499, desc:'рд╕рд░реНрд╡рд╢реНрд░реЗрд╖реНрда рдЧреБрдгрд╡рддреНрддрд╛', img:'https://picsum.photos/seed/p1/600/400'},
  {id:2, name:'рдкреНрд░реЛрдбрдХреНрдЯ 2', price:799, desc:'рд▓реЛрдХрдкреНрд░рд┐рдп рдЖрдЗрдЯрдо', img:'https://picsum.photos/seed/p2/600/400'},
  {id:3, name:'рдкреНрд░реЛрдбрдХреНрдЯ 3', price:999, desc:'рдЧреНрд░рд╛рд╣рдХреЛрдВ рдХрд╛ рдкрд╕рдВрджреАрджрд╛', img:'https://picsum.photos/seed/p3/600/400'},
  {id:4, name:'рдкреНрд░реЛрдбрдХреНрдЯ 4', price:299, desc:'рдмрдЬрдЯ рдлреНрд░реЗрдВрдбрд▓реА', img:'https://picsum.photos/seed/p4/600/400'}
];

const productGrid = document.getElementById('productGrid');
const cartCountEl = document.getElementById('cartCount');
const cartItemsEl = document.getElementById('cartItems');
const cartTotalEl = document.getElementById('cartTotal');

let cart = [];

// render products
function renderProducts(){
  productGrid.innerHTML = '';
  PRODUCTS.forEach(p=>{
    const card = document.createElement('div');
    card.className = 'card';
    card.innerHTML = `
      <img src="${p.img}" alt="${p.name}">
      <h3>${p.name}</h3>
      <p class="small">${p.desc}</p>
      <div class="price">тВ╣${p.price}</div>
      <div style="display:flex;gap:8px">
        <button class="btn" onclick="addToCart(${p.id})">рдХрд╛рд░реНрдЯ рдореЗрдВ рдбрд╛рд▓реЗрдВ</button>
        <button class="btn" style="background:#5a8" onclick="buyNow(${p.id})">Buy Now</button>
      </div>
    `;
    productGrid.appendChild(card);
  });
}
renderProducts();

function addToCart(id){
  const item = PRODUCTS.find(x=>x.id===id);
  cart.push(item);
  cartCountEl.innerText = cart.length;
  alert(item.name + ' рдХрд╛рд░реНрдЯ рдореЗрдВ рдЬреБрдбрд╝рд╛ред');
}

function buyNow(id){
  // clear cart and add this item, then open cart modal
  cart = [];
  cart.push(PRODUCTS.find(x=>x.id===id));
  cartCountEl.innerText = cart.length;
  openCart();
}

/* CART MODAL */
function openCart(){
  updateCartItems();
  document.getElementById('cartModal').style.display = 'flex';
}
function closeCart(){
  document.getElementById('cartModal').style.display = 'none';
  hideUPI();
}
function updateCartItems(){
  cartItemsEl.innerHTML = '';
  let total = 0;
  if(cart.length === 0){
    cartItemsEl.innerHTML = '<p class="small muted">рдЖрдкрдХрд╛ рдХрд╛рд░реНрдЯ рдЦрд╛рд▓реА рд╣реИред</p>';
  } else {
    cart.forEach((it, idx)=>{
      const p = document.createElement('p');
      p.innerHTML = `<span>${it.name} <span class="small">(${it.desc})</span></span>
        <span style="display:flex;align-items:center;gap:8px">тВ╣${it.price} <button onclick="removeItem(${idx})" style="background:transparent;border:0;cursor:pointer">тЭМ</button></span>`;
      cartItemsEl.appendChild(p);
      total += it.price;
    });
  }
  cartTotalEl.innerText = total;
}

function removeItem(index){
  cart.splice(index,1);
  cartCountEl.innerText = cart.length;
  updateCartItems();
}

/* ---------------------------
   UPI PAYMENT (no server)
   - Opens UPI intent on mobile
   - Also can generate QR via Google Chart API (no server) тАФ shown as image src.
   --------------------------- */
function showUPI(){
  document.getElementById('upiSection').style.display = 'block';
}
function hideUPI(){
  document.getElementById('upiSection').style.display = 'none';
}
function openUPI(){
  const upiId = (document.getElementById('upiIdInput').value || '').trim();
  if(!upiId){ alert('рдХреГрдкрдпрд╛ UPI ID рдбрд╛рд▓реЗрдВ'); return; }
  const amount = cart.reduce((s,i)=>s+i.price,0);
  if(amount <= 0){ alert('рдХрд╛рд░реНрдЯ рдЦрд╛рд▓реА рд╣реИ'); return; }
  // Build UPI URL (intent)
  // Format: upi://pay?pa=VPA&pn=Name&tn=Note&am=Amount&cu=INR
  const payeeName = encodeURIComponent('Mera Store');
  const note = encodeURIComponent('Order Payment');
  const url = `upi://pay?pa=${encodeURIComponent(upiId)}&pn=${payeeName}&tn=${note}&am=${encodeURIComponent(amount)}&cu=INR`;
  // Open - on mobile it will open UPI app, on desktop it may do nothing.
  window.location.href = url;
}

// Generate UPI QR via Google Charts (simple)
function generateQR(){
  const upiId = (document.getElementById('upiIdInput').value || '').trim();
  const amount = cart.reduce((s,i)=>s+i.price,0);
  if(!upiId){ alert('рдХреГрдкрдпрд╛ UPI ID рдбрд╛рд▓реЗрдВ'); return; }
  if(amount <= 0){ alert('рдХрд╛рд░реНрдЯ рдЦрд╛рд▓реА рд╣реИ'); return; }
  const upiURL = `upi://pay?pa=${encodeURIComponent(upiId)}&pn=${encodeURIComponent('Mera Store')}&tn=${encodeURIComponent('Order Payment')}&am=${encodeURIComponent(amount)}&cu=INR`;
  const qrSrc = `https://chart.googleapis.com/chart?chs=300x300&cht=qr&chl=${encodeURIComponent(upiURL)}`;
  const img = document.getElementById('upiQR');
  img.src = qrSrc;
  img.style.display = 'block';
}

/* ---------------------------
   RAZORPAY Integration (client-side)
   Two modes supported:
   1) If you have a server endpoint /create-order, the code will call it to create secure order.
   2) If no server, client-only checkout can open Razorpay with amount (less secure).
   Instructions: replace RAZORPAY_KEY with your test key (rzp_test_...) for testing.
   For production use: implement server-side order creation & signature verification.
   --------------------------- */

/* ====== CONFIGURE HERE ======
   Put your Razorpay key id (test or live) here for client-only flow.
   For secure flow, run server that exposes /create-order (example earlier).
*/
const RAZORPAY_KEY = "rzp_test_your_key_here"; // <-- Replace with your Razorpay Key ID (test) OR leave blank to force server flow
// If you have a server endpoint at /create-order that returns JSON { id, amount, currency, key }
// leave RAZORPAY_USE_SERVER = true, otherwise set false to use client-only
const RAZORPAY_USE_SERVER = false; // set true if you have server /create-order ready
/* ============================ */

async function startRazorpay(){
  const amount = cart.reduce((s,i)=>s+i.price,0);
  if(amount <= 0){ alert('рдХрд╛рд░реНрдЯ рдЦрд╛рд▓реА рд╣реИ'); return; }

  // collect optional customer info
  const custName = document.getElementById('custName').value || '';
  const custEmail = document.getElementById('custEmail').value || '';
  const custPhone = document.getElementById('custPhone').value || '';

  if(RAZORPAY_USE_SERVER){
    // Call server to create order (recommended)
    try {
      const res = await fetch('/create-order', {
        method:'POST',
        headers:{'Content-Type':'application/json'},
        body: JSON.stringify({ amount }) // amount in INR (server converts to paise)
      });
      const data = await res.json();
      if(!data || !data.id){ alert('Order creation failed on server'); return; }
      openRazorpayWindow(data.key || RAZORPAY_KEY, data.amount, data.id, custName, custEmail, custPhone);
    } catch(err){
      console.error(err); alert('Server order failed. Check console.'); 
    }
  } else {
    // Client-only flow (less secure). Uses RAZORPAY_KEY and amount in paise.
    if(!RAZORPAY_KEY || RAZORPAY_KEY.includes('your_key')) {
      alert('Razorpay Key рд╕реЗрдЯ рдирд╣реАрдВ рд╣реИред рд╕реЗрдЯ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП index.html рдореЗрдВ RAZORPAY_KEY рдЕрдкрдбреЗрдЯ рдХрд░реЗрдВ рдпрд╛ Razorpay_USE_SERVER=true рдХрд░ рджреЗрдВред');
      return;
    }
    const amountPaise = amount * 100;
    openRazorpayWindow(RAZORPAY_KEY, amountPaise, null, custName, custEmail, custPhone);
  }
}

function openRazorpayWindow(key, amountPaise, orderId=null, name='', email='', contact=''){
  const options = {
    key: key,
    amount: amountPaise, // paise
    currency: 'INR',
    name: 'Mera Store',
    description: 'Order Payment',
    image: '', // optional logo URL
    order_id: orderId, // if server created order
    handler: function(response){
      // response.razorpay_payment_id, razorpay_order_id, razorpay_signature (if order used)
      alert('Payment Success!\nPayment ID: ' + response.razorpay_payment_id);
      // TODO: Ideally call server to verify signature and record order
      cart = []; document.getElementById('cartCount').innerText = 0; updateCartItems(); closeCart();
    },
    prefill: { name: name, email: email, contact: contact },
    notes: { address: 'Buyer Address (optional)' },
    theme: { color: '#f39c12' }
  };
  const rzp = new Razorpay(options);
  rzp.on('payment.failed', function (response){
    alert('Payment failed: ' + (response.error && response.error.description ? response.error.description : 'Unknown'));
  });
  rzp.open();
}

/* ---------------------------
   Final small helper: keep cartCount in header up-to-date on load (it is)
   --------------------------- */
(function init(){ cartCountEl.innerText = cart.length; })();

</script>

<!--
  ====== NOTES & INSTRUCTIONS (рд╣рд┐рдиреНрджреА рдореЗрдВ) ======

  1) рдЗрд╕ рдлрд╝рд╛рдЗрд▓ рдХреЛ 'index.html' рдХреЗ рдирд╛рдо рд╕реЗ рд╕реЗрд╡ рдХрд░реЗрдВ рдФрд░ рдмреНрд░рд╛рдЙрдЬрд╝рд░ рдореЗрдВ рдЦреЛрд▓реЗрдВред
     - рдЕрдЧрд░ рдЖрдк Razorpay client-only (test) рдЯреЗрд╕реНрдЯ рдХрд░рдирд╛ рдЪрд╛рд╣рддреЗ рд╣реИрдВ, рддреЛ рдЗрд╕ рдлрд╝рд╛рдЗрд▓ рдореЗрдВ RAZORPAY_KEY рдмрджрд▓реЗрдВ:
         const RAZORPAY_KEY = "rzp_test_XXXXXXXX";
       рдФрд░ RAZORPAY_USE_SERVER = false рд░рдЦреЗрдВред (рдпрд╣ рддрд░реАрдХрд╛ рдХрдо secure рд╣реИ тАФ production рдореЗрдВ рдирд╛ рдЪрд▓реЗ)

  2) рд╕реБрд░рдХреНрд╖рд┐рдд (recommended) рддрд░реАрдХрд╛:
     - рд╕рд░реНрд╡рд░ рдкрд░ /create-order endpoint рдмрдирд╛рдПрдВ (рдореЗрд░реЗ рдкрд╣рд▓реЗ рдмрддрд╛рдП Node.js рдЙрджрд╛рд╣рд░рдг рдЬреИрд╕рд╛) рдЬреЛ Razorpay API рд╕реЗ order рдмрдирд╛рдХрд░ JSON рд╡рд╛рдкрд╕ рдХрд░реЗ: { id, amount, currency, key }
     - рдлрд┐рд░ рдЗрд╕ рдлрд╛рдЗрд▓ рдореЗрдВ RAZORPAY_USE_SERVER = true рд░рдЦреЗрдВ рдФрд░ client рдХреЛ рдЙрд╕реА server рдХрд╛ base URL рд╕реЗ serve рдХрд░реЗрдВ (рдпрд╛ CORS рдХреЛ рд╕рд╣реА рдХрд░реЗрдВ)ред

  3) UPI рдкреЗрдореЗрдВрдЯ:
     - рдбрд┐рдлрд╝реЙрд▓реНрдЯ UPI ID рдлрд╝реАрд▓реНрдб рдореЗрдВ "yourupi@bank" рд▓рд┐рдЦрд╛ рд╣реИ тАФ рдЗрд╕реЗ рдЕрдкрдиреА merchant UPI ID рд╕реЗ рдмрджрд▓реЗрдВред
     - "Open UPI App" рдореЛрдмрд╛рдЗрд▓ рдкрд░ UPI рдРрдк рдЦреЛрд▓ рджреЗрдЧрд╛ (desktop рдкрд░ рдХрд╛рдо рдирд╣реАрдВ рдХрд░ рд╕рдХрддрд╛)ред
     - QR Generate рд╕реЗ рдПрдХ QR рдмрдирддрд╛ рд╣реИ рдЬрд┐рд╕реЗ рд╕реНрдХреИрди рдХрд░ рдкреЗ рдХрд┐рдпрд╛ рдЬрд╛ рд╕рдХрддрд╛ рд╣реИред

  4) Testing advice:
     - Razorpay рдХреЗ рд▓рд┐рдП 'test' keys рд╕реЗ рдЖрдк рдЯреЗрд╕реНрдЯ рдХрд╛рд░реНрдб/UPI transactions рдХрд░ рд╕рдХрддреЗ рд╣реИрдВред
     - рд▓рд╛рдЗрд╡ рдореЛрдб рдХреЗ рд▓рд┐рдП Razorpay рдкрд░ KYC рдФрд░ live keys рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рд╣реЛрдЧреА, рдФрд░ server-side signature verification рдЬрд╝рд░реВрд░реА рд╣реИред

  5) рдмрджрд▓рд╛рд╡:
     - рдкреНрд░реЛрдбрдХреНрдЯ рдЬреЛрдбрд╝рдиреЗ/рдореВрд▓реНрдп рдмрджрд▓рдиреЗ рдХреЗ рд▓рд┐рдП PRODUCTS array рдХреЛ рдПрдбрд┐рдЯ рдХрд░реЗрдВред
     - рд▓реБрдХ рдмрджрд▓рдиреЗ рдХреЗ рд▓рд┐рдП CSS рдХреЛ рдПрдбрд┐рдЯ рдХрд░реЗрдВред

  рдЕрдЧрд░ рдЖрдк рдЪрд╛рд╣реЗрдВ рддреЛ рдореИрдВ рдпрд╣ рд╡рд╣реА рдкреИрдХреЗрдЬ ZIP рдХрд░ рдХреЗ рджреЗрдиреЗ рдХрд╛ рдХреЛрдб/рдлрд╛рдЗрд▓ рднреА рдмрдирд╛ рджреВрдБ тАФ рдкрд░ рдлрд┐рд▓рд╣рд╛рд▓ рдпрд╣ рдкреВрд░рд╛ HTML single-file solution рд╣реИ рдЬрд┐рд╕реЗ рдЖрдк рддреБрд░рдВрдд рдЙрдкрдпреЛрдЧ рдХрд░ рд╕рдХрддреЗ рд╣реИрдВред
-->

</body>
</html>
